<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script type="text/javascript" src="https://unpkg.com/popper.js"></script>
  <!-- <script type="text/javascript" src="https://unpkg.com/tooltip.js"></script> -->
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
  <script src="__dirname/../socket.io/socket.io.js"></script>


  <script language="javascript" type="text/javascript" src="js/jquery.mousewheel.js"></script>
  <script language="javascript" type="text/javascript" src="js/jquery.canvaswrapper.js"></script>
  <script language="javascript" type="text/javascript" src="js/jquery.colorhelpers.js"></script>
  <script language="javascript" type="text/javascript" src="js/jquery.flot.js"></script>
  <script language="javascript" type="text/javascript" src="js/jquery.flot.saturated.js"></script>
  <script language="javascript" type="text/javascript" src="js/jquery.flot.browser.js"></script>
  <script language="javascript" type="text/javascript" src="js/jquery.flot.drawSeries.js"></script>
  <script language="javascript" type="text/javascript" src="js/jquery.flot.uiConstants.js"></script>



  <link rel="icon" href="runnerIcon.ico" type="image/x-icon">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
  <link rel="stylesheet" href="main.css">
  <link href="crash.css" rel="stylesheet" type="text/css">
  <title>Runner by Artem</title>
</head>
  <script type="text/javascript">
      const userName = "<%= username %>"
      const userColor = "<%= color %>"
  </script>
<body>

  <div class="container-fluid">
    <div class="row">

      <div class=" gameField col-lg-4">
        <div class=" text-center history"></div>
        <div class="cnv">
          <h1 class="timex coefficientText"><span class="coefficient"></span>x</h1>
          <h1 class="timex timerText"><span class="timer"></span>сек.</h1>
          <h1 class="timex gameText"></h1>
          <div class="demo-container">
        			<div id="placeholder" class="demo-placeholder"></div>
        	</div>
        </div>

          <div class="container btnsPanel">

            <form id="formGame">


              <div class="row">

                <div class="col-6 form-group">
                  <label for="rate">Ставка</label>
                  <input id="rate" class="form-control rateInput" type="text" value="10" required>
                </div>
                <div class="col-6 form-group">
                  <label>Авто Стоп</label>
                  <input class="autoStop" type="checkbox" checked>
                  <input class="form-control autoStopInput" type="text" value="1.50" required>
                </div>

              </div>

              <button type="submit" class="btn btn-danger btnStartStop">Start</button>
            </form>

            <span>Balance: <b class="balance"></b></span>
            <p>Results: <b class="res"></b></p>

          </div>



      </div>

      <div class="col-lg-5">

        <div class="container playersInform">
          <div class="row table-responsive-sm">

            <table class="table">
              <thead>
                <tr>
                  <th scope="col">Игрок</th>
                  <th scope="col">Ставка</th>
                  <th scope="col">Кэф</th>
                  <th scope="col">Выигрыш</th>
                </tr>
              </thead>
              <tbody class="playersList">
                <!-- <tr>
                  <td>Mark</td>
                  <td>100</td>
                  <td>1.25</td>
                  <td>125</td>
                </tr> -->
              </tbody>
            </table>
            <div class="noPlayers"></div>
          </div>
        </div>


      </div>

      <div class="col-lg-3">
        <nav class="messeges"></nav>

        <form id="messageForm">
          <input autocomplete="off" focus placeholder="Your messege" type="te" class="inputMsg form-control" >
          <button type="submit" class="btn btn-danger" value="Send">Send</button>
        </form>


        <a class="logout" href="/logout"> LogOut</a>
        <a tabindex="0" class="online" role="button" data-container="body" data-trigger="focus" data-toggle="popover" data-placement="top" data-content="">
          <span>Online:</span><b></b>
        </a>

      </div>

    </div>
  </div>





  <script>


  $(function () {

    let
      timerRun=false,
      history = []


    $('.coefficientText').hide()
    $('.timerText').hide()

    function scrollButtom() {
      $(".messeges").stop().animate({ scrollTop: $(".messeges")[0].scrollHeight}, 1000);
    }
    function rnd(min,max){return Math.floor(Math.random() * (max- min) + min)}
    function addHistoryText(){

      history.unshift(crashScore/100)
      history.splice(history.length-1,1)


      $('.history').html(()=>{
        let str = ''
        history.forEach( (i) => {
          if(i==history[history.length-1])str += i + 'x'
          else str += i + 'x, '
        })
        return str
      })
    }

    $('.online').popover({
        container: 'body',
        trigger: 'focus'
      })

    const socket = io.connect()

    socket.emit('startSettings', {username:userName})

    $('#messageForm').submit(e => {
      e.preventDefault()
      let msgInput = $('.inputMsg').val()
      if(msgInput != ''){
        socket.emit('newMessege', {username:userName, msg:$('.inputMsg').val(), color:userColor})
        $('.inputMsg').val('')
      }
    })

    socket.on('PFM', data =>{

        data.m.forEach(function (entery) {
          $('.messeges').append("<p style='background-color:"+entery.color+"' class='alert'><b>"+entery.username+"</b>: "+entery.msg+"</p>");
        })

        history = data.history
        $('.history').html(()=>{
          let str = ''
          history.forEach( (i) => {
            if(i==history[history.length-1])str += i + 'x'
            else str += i + 'x, '
          })
          return str
        })

      scrollButtom()
    })

    socket.on('Addmessage', data =>{
      // console.log('message: ' + msg);
      if(data.val == 'newRecord'){
        $('.messeges').append("<div class='alert newRecord'><b>"+data.username+"</b>: "+data.msg+"</div>")
      }else if(data.val == 'myResult'){
        $('.messeges').append("<div class='alert myResult'><b>"+data.username+"</b>: "+data.msg+"</div>")
      }else{
        $('.messeges').append("<div style='background-color:"+data.color+"' class='alert'><b>"+data.username+"</b>: "+data.msg+"</div>")
      }
      scrollButtom()
    })

    socket.on('connectDisconnectOnline', data => {

        let online = data.online

        $('.online b').html(data.online.length)


          $('.online').attr('data-content', ()=>{
              let dataContent =''
              for (let i = 0; i < online.length; i++) {
                if(i == online.length -1){
                  dataContent += (online[i])
                }else dataContent += (online[i] + ', ')
              }
              return dataContent
            })


        // console.log(data.online)

      $('.messeges').append("<div class='alert text-center connectDisconnect'><b>"+data.username+"</b> "+ data.value+"</div>")
      scrollButtom()
    })

    socket.on('playersInformFromServer', data =>{
      console.log(data)

      if(data.length > 0){
        $('.noPlayers').html('')
        $('.playersList').html(()=>{
          str=""
          data.forEach(item=>{
            str+="<tr>"
            str += "<td>"+item.name+"</td>"
            str += "<td>"+item.rate+"</td>"
            str += "<td>"+item.coefficient+"</td>"
            str += "<td>"+item.winMoney+"</td>"
            str+="</tr>"
          })
          return str
        })

      }
      else{
        $('.playersList').html("")
        $('.noPlayers').html("<span>Нет игроков в игре</span>")
      }



    })

    socket.on('startGameFromServer', properties => {
      // start = dataStart
      if(!timerRun && properties.status == 'start'){
        $('.timerText').hide()
        $('.gameText').hide()
        $('.coefficientText').show()
        time = 0
        crashScore = properties.crashScore
        startGame()
      }else if(!timerRun && properties.status == 'reload'){
        statusGame = 'reload'
        // history = properties.history
        // addHistoryText()
        $('.gameText').html('Reload...')
        // timer()
      }else if (!timerRun && properties.status == 'game'){
        // history = properties.history
        // addHistoryText()
        statusGame = 'game'
        $('.gameText').html('Game now...')
      }

    })


    function generate(start) {
        let res = [];
        let x, yLocal

        for (let i = 0; i <= 2; i++) {
            x = i
            yLocal=(timeOnStart*i)/2
            res.push([x, yLocal]);
        }
        return res;
    }

    let
      timeOnStart=1,
      gameActive = false,
      crashScore,
      balance,
      rate,
      letTick = 75,
      autoStop,
      time =10,
      statusGame = 'off',
      statusPlayer = 'off',
      statusFieldGame = 'lose',
      index = 0,
      yd = 0,
      data = [],
      plot = $.plot("#placeholder", data,{label: 'string'}),
      speed = 0.001;

    // GET BALANCE
    localStorage.getItem('balance') ? balance = Math.round(Number(localStorage.getItem('balance'))) : balance = 50
    $('.balance').html(balance)



    let y = plot.getAxes().yaxis;
    let x = plot.getAxes().xaxis;


    y.options.max = 3
    y.options.growOnly = false;
    y.options.autoScale = "none"
    y.options.showMinorTicks = 'true';
    x.options.showTickLabels = 'none';
    x.options.gridLines = 'true';
    x.options.ticks = 'null';




    let update = ()=>{
      if(gameActive){


        // endGame
        if(gameActive && (Number(timeOnStart.toFixed(2)) >= crashScore/100)){
          gameActive = false
          if(rate && statusPlayer == 'join'){
            statusFieldGame = 'lose'
            $('.res').append('-'+rate + ', ')
            localStorage.setItem('balance', balance)
            statusPlayer = 'leave'
          }

          addHistoryText()
          // socket.emit('end',true)
          setTimeout(()=>{timer()},2000)


        }else{
          if(timeOnStart>2.9){
            y.options.max +=0.01
          }
          index += speed

          data = [{
              data: generate(index),
              xaxis: 1,
              yaxis:1,
              lines: { show: true},
          }];

          plot.setData(data)
          plot.setupGrid(true)
          plot.draw()
        }

      // setTimeout(()=>{update()},100)
      requestAnimationFrame( update )
      }
    }

    timer = ()=>{
      statusGame = 'reload'
      statusFieldGame = 'lose'
      $('.btnStartStop').removeAttr('disabled')
      $('.coefficientText').hide()
      $('.timerText').show()
      time = 12
      $('.timer').html(time)

      timerTick = ()=>{
        if(time > 1){
          time -= 1
          $('.timer').html(time)
          setTimeout(timerTick,1000);
        }else{
          timerRun=false
          $('.timer').html('')
          $('.coefficient').html('1.00')
          $('.timerText').hide()
          $('.coefficientText').show()
        }
      }

      setTimeout(timerTick,1000);

    }

    tick = ()=>{
      if(gameActive){
        if(timeOnStart >= Number(autoStop) && statusPlayer=='join' ){
          leaveGame()
        }
        setTimeout(tick,letTick);
        speed+=timeOnStart
        letTick = letTick-0.1
        timeOnStart += 0.01
        $('.coefficient').html(timeOnStart.toFixed(2))

      }else{
        $('.btnStartStop').html('Start')
      }
    }

  let startGame = ()=>{
      console.log('statusPlayer='+statusPlayer)
      if(statusPlayer == 'join'){
        $('.btnStartStop').removeAttr('disabled')
      }else{
        $('.btnStartStop').attr('disabled','')
      }
      $('.coefficientText').show()
      $('.btnsPanel .alert').hide()

      if($('.gameField').width()<500){
        letTick = 65
      }else{
        letTick = 75
      }


      timeOnStart=1
      gameActive = true
      statusGame = 'game'
      index = 0
      y.options.max =3
      // crashScore = rnd(120,500)
      console.log('crashScore=' + crashScore/100)



      update()
      setTimeout(tick, letTick);
    }

    joinGame = ()=>{
     if (statusGame == 'reload'){
       statusPlayer = 'join'
       // EMIT TO SERVER (RATE NAME)
       rate = $('.rateInput').val()
       balance = balance - rate
       socket.emit('playerJoined', {name:userName, rate:rate})
       $('.balance').html(balance)
       $('.btnStartStop').attr('disabled','')
     }
    }

    leaveGame = ()=>{
      statusPlayer = 'leave'
      $('.btnStartStop').html('Start')
      let winMoney = timeOnStart.toFixed(2) * rate
      balance = Math.round(balance + winMoney)
      statusFieldGame = 'win'
      socket.emit('playerLeaves', {name:userName, coefficient:timeOnStart.toFixed(2), winMoney:Math.round(winMoney)} )
      $('.balance').html(balance)
      $('.res').append(Math.round(winMoney) + '('+ timeOnStart.toFixed(2) + '), ')
      $('.btnStartStop').attr('disabled','')

      localStorage.setItem('balance', balance)
    }


    $('#formGame').submit(e=>{
      e.preventDefault()
      if(!gameActive && (statusGame=='reload') && ($('.rateInput').val() != '') && ($('.rateInput').val() <= balance) && ($('.rateInput').val() != 0 && ($('.btnStartStop').text() == 'Start'))){
        $('.btnStartStop').html('Stop')
        if($('.autoStop').is(':checked')){
          autoStop = $('.autoStopInput').val()
          console.log('autoStop='+autoStop)
        }else{
          autoStop = 999
        }
        joinGame()
      }else if(statusGame == 'game' && $('.btnStartStop').text() == 'Stop'){
        leaveGame()

      }

    })



  })



  </script>
</body>
</html>
